cmake_minimum_required(VERSION 3.0)
 
project(ASTex_win_deps LANGUAGES)

find_program(NINJA ninja)
find_program(JOM jom)

if (DEFINED NINJA)
	set (GENERATOR "Ninja")
else ()
	if(DEFINED JOM)
		set (GENERATOR "NMake Makefiles JOM")
	else()
		set (GENERATOR "NMake Makefiles")
	endif()
endif()
message (STATUS ${NINJA})
message (STATUS ${JOM})
message (STATUS ${GENERATOR})

include(ExternalProject)

set(ASTEX_INSTALL_PREFIX ${CMAKE_CURRENT_SOURCE_DIR}/../ASTex_installed CACHE PATH "installation directory for deps & ASTex")
set(ASTEX_SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/../ASTex CACHE PATH "source dir")
set(ASTEX_BUILD ${CMAKE_CURRENT_SOURCE_DIR}/../Build_ASTex CACHE PATH "build dir")
set(CMAKE_CONFIGURATION_TYPES CACHE PATH "")
set(CMAKE_INSTALL_PREFIX CACHE PATH "")

option(BUILD_DEPS  "clone & build dependencies" ON )
option(BUILD_SHARED  "build dynamic lib" OFF )
option(BUILD_RELEASE "build release" OFF )
option(ADD_POST_TO_DIR "Add _S for static & _rel or _dbg to created path" ON )


if (BUILD_SHARED)
	set (STATIC "")
else()
	set (STATIC "static")
	set(SUB_PREFIX "S")
endif()

if (BUILD_RELEASE)
	set (BUILD_TYPE "Release")
	set(SUB_PREFIX "${SUB_PREFIX}rel")
else()
	set (BUILD_TYPE "Debug")
	set(SUB_PREFIX "${SUB_PREFIX}dbg")
endif()

if (${ADD_POST_TO_DIR})
	set(ASTEX_BUILD ${ASTEX_BUILD}_${SUB_PREFIX})
	set(ASTEX_INSTALL_PREFIX ${ASTEX_INSTALL_PREFIX}/${SUB_PREFIX})
endif()

# must the same as git tag of itk
set (ITKVERSION "4.13")

if (${BUILD_DEPS})

ExternalProject_Add(zlib
	INSTALL_DIR ${ASTEX_INSTALL_PREFIX}
	GIT_REPOSITORY https://github.com/madler/zlib.git
	GIT_TAG v1.2.11
	GIT_SHALLOW ON
	CMAKE_GENERATOR ${GENERATOR}
	CMAKE_ARGS
	-DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
	-DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
)

ExternalProject_Add(openEXR
	DEPENDS zlib
	INSTALL_DIR ${ASTEX_INSTALL_PREFIX}
	GIT_REPOSITORY https://github.com/openexr/openexr.git
	GIT_TAG v2.3.0
	GIT_SHALLOW ON
	CMAKE_GENERATOR ${GENERATOR}
	CMAKE_ARGS
	-DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
	-DCMAKE_PREFIX_PATH:PATH=<INSTALL_DIR>
	-DILMBASE_PACKAGE_PREFIX:PATH=<INSTALL_DIR>
	-DOPENEXR_BUILD_STATIC:BOOL=NOT${BUILD_SHARED}
	-DOPENEXR_BUILD_SHARED:BOOL=${BUILD_SHARED}
	-DOPENEXR_BUILD_ILMBASE:BOOL=ON
	-DOPENEXR_BUILD_OPENEXR:BOOL=ON
	-DOPENEXR_BUILD_PYTHON_LIBS:BOOL=OFF
	-DOPENEXR_BUILD_UTILS:BOOL=OFF
	-DOPENEXR_BUILD_TESTS:BOOL=OFF
	-DOPENEXR_BUILD_VIEWERS:BOOL=OFF 
	-DOPENEXR_NAMESPACE_VERSIONING:BOOL=OFF
	-DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
)

ExternalProject_Add(itk
	DEPENDS zlib
	INSTALL_DIR ${ASTEX_INSTALL_PREFIX}
	GIT_REPOSITORY https://github.com/InsightSoftwareConsortium/ITK.git
	GIT_TAG v4.13.1
	GIT_SHALLOW ON
	CMAKE_GENERATOR ${GENERATOR}
	CMAKE_ARGS
	-DCMAKE_BUILD_TYPE:STRING=${BUILD_TYPE}
	-DITK_USE_SYSTEM_ZLIB:BOOL=ON
	-DBUILD_SHARED_LIBS:BOOL=ON
	-DBUILD_TESTING:BOOL=OFF
	-DINSTALL_GTEST:BOOL=OFF
	-DZLIB_INCLUDE_DIR:PATH=<INSTALL_DIR>/include
	-DZLIB_LIBRARY_RELEASE:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}.lib
	-DZLIB_LIBRARY_DEBUG:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}d.lib
	-DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
)

add_custom_target(patchitkpng DEPENDS itk)
add_custom_command(TARGET patchitkpng PRE_BUILD
	COMMAND ${CMAKE_COMMAND} -E copy 
	${CMAKE_CURRENT_BINARY_DIR}/itk-prefix/src/itk/Modules/ThirdParty/PNG/src/itkpng/pnglibconf.h
	${ASTEX_INSTALL_PREFIX}/include/ITK-${ITKVERSION}/itkpng/
)

endif()

ExternalProject_Add(ASTex
	DEPENDS itk openEXR patchitkpng
	INSTALL_DIR ${ASTEX_INSTALL_PREFIX}
	SOURCE_DIR ${ASTEX_SOURCE}
	BINARY_DIR ${ASTEX_BUILD}
	LOG_CONFIGURE ON
	BUILD_COMMAND ""
	INSTALL_COMMAND ""
	TEST_COMMAND ""
	CMAKE_GENERATOR ${CMAKE_GENERATOR}
	CMAKE_ARGS
	-DCMAKE_CONFIGURATION_TYPES:STRING=${BUILD_TYPE} 
	-DCMAKE_PREFIX_PATH:PATH=<INSTALL_DIR>
	-DZLIB_INCLUDE_DIR:PATH=<INSTALL_DIR>/include 
	-DZLIB_LIBRARY_RELEASE:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}.lib
	-DZLIB_LIBRARY_DEBUG:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}d.lib
	-DPNG_PNG_INCLUDE_DIR=<INSTALL_DIR>/include/ITK-${ITKVERSION}/itkpng
	-DPNG_LIBRARY_RELEASE:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}.lib
	-DPNG_LIBRARY_DEBUG:FILEPATH=<INSTALL_DIR>/lib/zlib${STATIC}d.lib
	-DPNG_LIBRARY_RELEASE:FILEPATH=<INSTALL_DIR>/lib/itkpng-${ITKVERSION}.lib
	-DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
)

if (${BUILD_SHARED})
	if (${CMAKE_GENERATOR} MATCHES "^Visual Studio 15.*")
		message(STATUS "Generate VS 2017 launcher")
		file( WRITE ${ASTEX_BUILD}/launchVS.bat 
			"set PATH=${ASTEX_INSTALL_PREFIX}/bin\n"
			"start \"C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/Common7/IDE/devenv.exe\" ASTex.sln")
	endif()
	if (${CMAKE_GENERATOR} MATCHES "^Visual Studio 14.*")
		message(STATUS "Generate VS 2015 launcher")
		file( WRITE ${ASTEX_BUILD}/launchVS.bat 
			"set PATH=${ASTEX_INSTALL_PREFIX}/bin\n"
			"start \"C:/Program Files (x86)/Microsoft Visual Studio 14.0/Common7/IDE/devenv.exe\" ASTex.sln")
	endif()
endif()
